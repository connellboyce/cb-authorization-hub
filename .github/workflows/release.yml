name: Release, Build & Push Docker Image

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major


jobs:
  prepare-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    outputs:
      release_version: ${{ steps.set-version.outputs.release_version }}
      release_branch: ${{ steps.set-version.outputs.release_branch }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Calculate and set release version
        id: set-version
        run: |
          CURRENT=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          BASE=${CURRENT%-SNAPSHOT}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE"
          
          case "${{ github.event.inputs.release_type }}" in
            major) MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0;;
            minor) MINOR=$((MINOR + 1)); PATCH=0;;
            patch) PATCH=$((PATCH + 1));;
          esac
          
          RELEASE_VERSION="$MAJOR.$MINOR.$PATCH"
          RELEASE_BRANCH="release/v$RELEASE_VERSION"
          
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          echo "release_branch=$RELEASE_BRANCH" >> $GITHUB_OUTPUT
          
          mvn versions:set -DnewVersion=$RELEASE_VERSION -DgenerateBackupPoms=false

      - name: Create release branch and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout -b ${{ steps.set-version.outputs.release_branch }}
          git add pom.xml
          git commit -m "ci: Prepare release ${{ steps.set-version.outputs.release_version }}"
          git push origin ${{ steps.set-version.outputs.release_branch }}

